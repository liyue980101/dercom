<?php


namespace app\admin\controller;


use app\admin\model\AdminUser;
use app\admin\model\PageSetting as PageSettingModel;
use app\common\controller\AdminBaseController;
use app\common\service\FormBuilder as Form;
use think\facade\Route;
use think\Request;

class PageSetting extends AdminBaseController
{

    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub

        $this->model=new PageSettingModel();

        //$this->assign("user",AdminUser::field("id,username")->select()->toArray());
    }

    /**
     * @param Request $request
     * @return string|\think\response\Json
     * @throws \FormBuilder\exception\FormBuilderException
     * @author: DER <der1998@gmail.com>
     * @describe:添加
     */
    public function add(Request $request)
    {
        $f = [];
        $f[] = Form::hidden("__token__", token());
        $f[] = Form::input('page_num', '页面序号')->placeholder("请输入序号")->required("请输入序号");
        $f[] = Form::input('jump_url', '跳转地址')->placeholder("请输入跳转地址")->required("请输入跳转地址");
        $form = Form::make_post_form('添加页面', $f, Route::buildUrl('upAndAdd'));
        $this->assign(compact('form'));
        return $this->fetch('public/form-builder');
    }

    /**
     * @param $id
     * @return string|\think\response\Json
     * @throws \FormBuilder\exception\FormBuilderException
     * @author: DER <der1998@gmail.com>
     * @describe:编辑
     */
    public function edit($id)
    {

        $info = $this->model->where("id", $id)->find()->toArray();
        if (!$info) {
            return parent::failed("未查询到数据");
        }
        //dd($info);
        $f = [];
        $f[] = Form::hidden("__token__", token());
        $f[] = Form::hidden("id", $info['id']);
        $f[] = Form::input('page_num', '页面序号',$info['page_num'])->placeholder("请输入序号")->required("请输入序号");
        $f[] = Form::input('jump_url', '跳转地址',$info['jump_url'])->placeholder("请输入跳转地址")->required("请输入跳转地址");
        $form = Form::make_post_form('修改页面', $f, Route::buildUrl('upAndAdd'));
        $this->assign(compact('form'));
        return $this->fetch('public/form-builder');
    }

}